--INSERT dmTPES_DOCU (DOCU_CLAVE, DOCU_INFO) VALUES ( 'dmTPES_spEnvioMailsNuevosPedidos',
--'
--/*
--* @brief	Obtiene los destinatarios por el vendedor asociado al cliente y los nuevos pedidos. Genera los mensajes.
--* @details	Por auditoria se detecta el alta de pedidos en Plataforma, y genere los mails solicitados,
--	uno por cada pedido, y los envía a los vendedores, de acuerdo al esquema seleccionado (vendedor de cliente).
--	Construye las grillas e implementa las plantillas del modelo 1.
--	Invoca a los scripts del modulo para procesar los destinatarios y los parametros del mensaje.
--	No usa archivos adjuntos.
--* @params	@TAREA_PROGRAMADA. Selecciona el número de tarea a realizar.	
--* @params	@FECHA	Opcional. Asigna una fecha que el store usara para filtrar los vencimientos. Si no se indica nada, se tomara la fecha actual.
--*/
--')
--IF OBJECT_ID('dmTPES_spEnvioMailsNuevosPedidos') IS NOT NULL
--BEGIN
--	DROP PROCEDURE dmTPES_spEnvioMailsNuevosPedidos;
--END;
--GO
--CREATE PROC dmTPES_spEnvioMailsNuevosPedidos @TAREA_PROGRAMADA INT, @FECHA DATETIME = NULL
--AS
--BEGIN
--Testing: 
		 DECLARE @TAREA_PROGRAMADA INT 
		 SET @TAREA_PROGRAMADA = 19
		 DECLARE @FECHA DATETIME

	EXEC dmTPES_spPrepararTareaProgramadaEstandar @TAREA_PROGRAMADA
	
	--EXTRAIGO FILTROS GENERALES Y DATOS UTILES
	SET @FECHA = ISNULL(@FECHA, GETDATE())

	DECLARE @DIVISIONES NVARCHAR(MAX) = (SELECT dbo.dmTPES_fnObtenerDivisionesListado(@TAREA_PROGRAMADA, DEFAULT))
	

	DECLARE @TEMPLATE_MAIN NVARCHAR(MAX) = (SELECT PARM_VALOR FROM dbo.dmTPES_PARM WHERE PARM_CODIGO_TPRG = @TAREA_PROGRAMADA AND PARM_CLAVE = '{template::main}' )
	DECLARE @TEMPLATE_TABLE NVARCHAR(MAX) = (SELECT dbo.dmTPES_fnObtenerPlantillaDeTabla(@TAREA_PROGRAMADA,1) )
	DECLARE @TEMPLATE_ROW VARCHAR(MAX) =  (SELECT dbo.dmTPES_fnObtenerPlantillaDeFila(@TAREA_PROGRAMADA,1) )
	DECLARE @TEMPLATE_HEAD NVARCHAR(MAX) = ISNULL( (SELECT PARM_VALOR FROM dbo.dmTPES_PARM WHERE PARM_CODIGO_TPRG = @TAREA_PROGRAMADA AND PARM_CLAVE = '{template::head}' ), '')
	DECLARE @TEMPLATE_FOOT NVARCHAR(MAX) = ISNULL( (SELECT PARM_VALOR FROM dbo.dmTPES_PARM WHERE PARM_CODIGO_TPRG = @TAREA_PROGRAMADA AND PARM_CLAVE = '{template::foot}' ), '')

	--ACTUALIZO LA PLANTILLA PRINCIPAL CON LA TABLA GENERADA A PARTIR DEL ESQUEMA DE COLUMNAS PERSONALIZABLES
	SET @TEMPLATE_MAIN = (SELECT REPLACE(@TEMPLATE_MAIN, '{template::table}', @TEMPLATE_TABLE) )

	/****************************************************************************************************************/
	/****************************************************************************************************************/

	--GENERO LA CONSULTA PRINCIPAL 
	--A PARTIR DE ESTE DETALLE SE DEDUCEN LOS DESTINATARIOS, QUE PUEDEN O NO TENER CUENTAS DE DESTINO VALIDAS
	--MAS ADELANTE LA TABLA DE DESTINATARIOS DETERMINARA LOS REGISTROS DEL CUERPO DE MENSAJE QUE SE UTILIZARAN
	--INICIO LAS CONSULTAS PRINCIPALES PARA ARMAR EL DETALLE DE LA GRILLA CON FACTURACIONES
	DECLARE @NP TABLE (
		COD_CLIENTE INT,
		NOMBRE_CLIE INT,
		FECHA_EMI	DATETIME,
		TIPO_NP	DATETIME,
		NRO_NP	SMALLINT,
		FACT_SUCURSAL	INT,
		FACT_TIPO	VARCHAR(3),
		FACT_NUMERO	DECIMAL,
		FACT_SALDO_ORIGEN	DECIMAL(14,2),
		FACT_SALDO_LOCAL	DECIMAL(14,2),
		FACT_MONEDA_ORIGEN	VARCHAR(3),
		FACT_IMP_TOT_ORI	DECIMAL(14,2)
	)
	INSERT INTO @FACTURAS (
		FACT_CLIENTE
		,FACT_CTACTE
		,FACT_FECHA_EMISION
		,FACT_FECHA_VENVIMIENTO
		,FACT_DIVISION
		,FACT_SUCURSAL
		,FACT_TIPO
		,FACT_NUMERO
		,FACT_SALDO_ORIGEN
		,FACT_SALDO_LOCAL
		,FACT_MONEDA_ORIGEN
		,FACT_IMP_TOT_ORI
	)
	SELECT
		CLIE_CLIENTE
		,CTEC_CTACTE_CTEC
		,CTEC_FECHA_EMI
		,VCTC_FECHA_VTO
		,CVCC_DIVISION_CVCL
		,CVCC_SUCURSAL_CVCL
		,CVCC_TIPO_CVCL
		,CVCC_NUMERO_CVCL
		,VCTC_SAL_ORI
		,VCTC_SAL_LOC
		,CTEC_MONEDA
		,CTEC_IMP_TOT_ORI
	FROM dmSDK_fnComprobantesPorVencer(@FECHA_DE_VENCIMIENTO, @ANTICIPO_FECHA_VENCIMIENTO, @DIVISIONES, @SUCURSALES, @TIPOS)
	INNER JOIN CCOB_CVCC
		ON CVCC_CTACTE_CTEC = CTEC_CTACTE_CTEC 
	INNER JOIN CCOB_CLIE
		ON CLIE_CLIENTE = CTEC_CLIENTE
	WHERE (
		(
			@FILTRAR_FECHA_EMISION = 0
			OR (
				@FILTRAR_FECHA_EMISION = 1
				AND CONVERT(VARCHAR,CVCL_FECHA_EMI,112) = CONVERT(VARCHAR,@FECHA - @RETRASO_FECHA_EMISION,112)
			)
		)
		AND (
				(
					@SALDO_MINIMO_DESDE_PARAMETROS_GENERALES = 0
					AND VCTC_SAL_LOC >= @SALDO_MINIMO
				)
				OR (
					@SALDO_MINIMO_DESDE_PARAMETROS_GENERALES <> 0
					AND VCTC_SAL_LOC >= @SALDO_MINIMO_DESDE_PARAMETROS_GENERALES
				)
		)
	)
	GROUP BY
		CLIE_CLIENTE
		,CTEC_CTACTE_CTEC
		,CTEC_FECHA_EMI
		,VCTC_FECHA_VTO
		,CVCC_DIVISION_CVCL
		,CVCC_SUCURSAL_CVCL
		,CVCC_TIPO_CVCL
		,CVCC_NUMERO_CVCL
		,VCTC_SAL_ORI
		,VCTC_SAL_LOC
		,CTEC_MONEDA
		,CTEC_IMP_TOT_ORI
	
	--Testing:
	--		select * from @FACTURAS

	/****************************************************************************************************************/
	/****************************************************************************************************************/

	--INCORPORO LOS DESTINATARIOS QUE RESULTARON DE LA CONSULTA PRINCIPAL
	INSERT INTO dmTPES_MAIL(
		MAIL_CODIGO_TPRG
		,MAIL_SUJETO
		,MAIL_CLIENTE
		,MAIL_CTACTE
		,MAIL_PARA
		,MAIL_CC
		,MAIL_CCO
		,MAIL_ASUNTO
		,MAIL_CUERPO
	)
	SELECT
		@TAREA_PROGRAMADA
		,ROW_NUMBER() OVER (ORDER BY UNION_CLIENTE)
		,UNION_CLIENTE
		,UNION_CTACTE
		,NULL
		,NULL
		,NULL
		,NULL
		,''
	FROM (
		--CLIENTES NO EVENTUALES, CADA CLIENTE ES UN EMAIL
		SELECT DISTINCT
			FACT_CLIENTE	UNION_CLIENTE
			,NULL			UNION_CTACTE
		FROM @FACTURAS
		INNER JOIN CCOB_CLIE
			ON CLIE_CLIENTE = FACT_CLIENTE
		WHERE CLIE_ES_CLI_GLOB = 0

		UNION ALL
		--CLIENTES EVENTUALES SE VINCULAN POR CTACTE, CADA CTACTE ES UN EMAIL
		SELECT DISTINCT
			FACT_CLIENTE	UNION_CLIENTE
			,FACT_CTACTE	UNION_CTACTE
		FROM @FACTURAS
		INNER JOIN CCOB_CLIE
			ON CLIE_CLIENTE = FACT_CLIENTE
		WHERE CLIE_ES_CLI_GLOB = 1
	) DESTINATARIOS

		--Testing:
	--		select * from dmTPES_MAIL
	EXEC dbo.dmTPES_spDescartarClientesPorEventualidad @TAREA_PROGRAMADA
	--Testing:
	--		select * from dmTPES_MAIL	
	EXEC dbo.dmTPES_spDescartarClientesPorClasificadores @TAREA_PROGRAMADA
    --Testing:
	--		select * from dmTPES_MAIL
	EXEC dbo.dmTPES_spDescartarClientesPorActividad @TAREA_PROGRAMADA
	--Testing:
	--		select * from dmTPES_MAIL
	EXEC dbo.dmTPES_spAplicarParametrosDeDestinatarios @TAREA_PROGRAMADA
	--Testing:
	--		select * from dmTPES_MAIL
	--		select * from @FACTURAS

	--QUITA LAS FACTURAS CUYOS DESTINATARIOS FUERON DESCARTADOS
	DELETE F
	FROM @FACTURAS F
	LEFT JOIN dmTPES_MAIL D
		ON MAIL_CLIENTE = FACT_CLIENTE
		AND MAIL_CODIGO_TPRG = @TAREA_PROGRAMADA
	WHERE MAIL_SUJETO IS NULL

	/****************************************************************************************************************/
	/****************************************************************************************************************/

	--LA PLANTILLA DEFINE EL CUERPO DEL MENSAJE CON EL ENCABEZADO DE LA GRILLA DE FACTURACION
	--MIENTRAS QUE LA PLANTILLA 2 DEFINE CADA RENGLON DE CADA FACTURA A INSERTAR DENTRO DE LA GRILLA
	--LA CONSTRUCCION DE ESTE MODELO INICIA CON LOS RENGLONES DE LA GRILLA Y LUEGO VA COMBINANDO LOS RESULTADOS CON LA PLANTILLA PRINCIPAL

	--GENERO EL RENGLON HTML PARA CADA FACTURA DE CADA CLIENTE
	--CONSISTE EN UNA LINEA HTML COMPUESTA POR UN ELEMENTO <tr></tr> QUE CONTIENE EN SUS COLUMNAS LOS VALORES DE UNA FACTURA
	DECLARE @FILAS_HTML TABLE (
		FILA_CLIENTE INT
		,FILA_HTML NVARCHAR(MAX)
	)
	INSERT INTO @FILAS_HTML (
		FILA_CLIENTE
		,FILA_HTML
	)
	SELECT 
		FACT_CLIENTE,
		CAST(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE(
			REPLACE( @TEMPLATE_ROW
			,'{data::comprobante-emision}103', CONVERT(VARCHAR, FACT_FECHA_EMISION, 103) )
			,'{data::comprobante-emision}', FACT_FECHA_EMISION )
			,'{data::vencimiento}103', CONVERT(VARCHAR, FACT_FECHA_VENVIMIENTO, 103) )
			,'{data::vencimiento}', FACT_FECHA_VENVIMIENTO )
			,'{data::comprobante}largo', RIGHT( '0000' + CONVERT(VARCHAR(4), FACT_DIVISION), 4) +'-'+ RIGHT( '0000' + CONVERT(VARCHAR(4), FACT_SUCURSAL), 4)+'-'+FACT_TIPO+'-'+RIGHT( '0000000000' + CONVERT(VARCHAR(10), FACT_NUMERO), 10) )
			,'{data::comprobante}corto', CONVERT(VARCHAR(4), FACT_DIVISION) +'-'+ CONVERT(VARCHAR(4), FACT_SUCURSAL)+'-'+FACT_TIPO+'-'+CONVERT(VARCHAR(10), FACT_NUMERO) )
			,'{data::comprobante}', CONVERT(VARCHAR(4), FACT_DIVISION) +'-'+ CONVERT(VARCHAR(4), FACT_SUCURSAL)+'-'+FACT_TIPO+'-'+CONVERT(VARCHAR(10), FACT_NUMERO) )
			,'{data::division}largo', RIGHT( '00' + CONVERT(VARCHAR(2), FACT_DIVISION), 2) )
			,'{data::division}corto', CONVERT(VARCHAR(4), FACT_DIVISION) )
			,'{data::division}', CONVERT(VARCHAR(4), FACT_DIVISION) )
			,'{data::sucursal}largo', RIGHT( '0000' + CONVERT(VARCHAR(4), FACT_SUCURSAL), 4) )
			,'{data::sucursal}corto', CONVERT(VARCHAR(4), FACT_SUCURSAL) )
			,'{data::sucursal}', CONVERT(VARCHAR(4), FACT_SUCURSAL) )
			,'{data::tipo}', FACT_TIPO )
			,'{data::numero}largo', RIGHT( '0000000000' + CONVERT(VARCHAR(10), FACT_NUMERO), 10) )
			,'{data::numero}corto', CONVERT(VARCHAR(10), FACT_NUMERO) )
			,'{data::numero}', CONVERT(VARCHAR(10), FACT_NUMERO) )
			,'{data::saldo-origen}moneda', CONVERT(VARCHAR, CONVERT(MONEY, FACT_SALDO_ORIGEN)) )
			,'{data::saldo-origen}', CONVERT(VARCHAR, FACT_SALDO_ORIGEN) )
			,'{data::saldo-local}moneda', CONVERT(VARCHAR, CONVERT(MONEY, FACT_SALDO_LOCAL)) )
			,'{data::saldo-local}', CONVERT(VARCHAR, FACT_SALDO_LOCAL) )
			,'{data::comprobante-moneda}', ISNULL(FACT_MONEDA_ORIGEN, '') )
			,'{data::comprobante-moneda}codigo', ISNULL(FACT_MONEDA_ORIGEN, '') )
			,'{data::comprobante-moneda}nombre', ISNULL( (SELECT MONE_NOMBRE FROM SIST_MONE WHERE MONE_MONEDA = FACT_MONEDA_ORIGEN AND MONE_UTILIZABLE = 1), '') )
			,'{data::comprobante-moneda}simbolo', ISNULL( (SELECT MONE_SIMBOLO FROM SIST_MONE WHERE MONE_MONEDA = FACT_MONEDA_ORIGEN AND MONE_UTILIZABLE = 1), '') )
			,'{data::comprobante-moneda}afip',ISNULL( (SELECT MONE_TIPO_MON_AFIP FROM SIST_MONE WHERE MONE_MONEDA = FACT_MONEDA_ORIGEN  AND MONE_UTILIZABLE = 1), '') )
			,'{data::comprobante-importe-origen}moneda', CONVERT(VARCHAR, CONVERT(MONEY, FACT_IMP_TOT_ORI)) )
			,'{data::comprobante-importe-origen}', CONVERT(VARCHAR, FACT_IMP_TOT_ORI) )
			,CHAR(13), '')
			,CHAR(10), '')
		AS NVARCHAR(MAX))	AS FILAS_HMTL
	FROM @FACTURAS

	--CONCATENO CADA RENGLON HTML PARA GENERAR UNA GRILLA HTML PARA CADA CLIENTE
	--SE REALIZA UN AGRUPAMIENTO DE LOS RENGLONES HTML, DE TAL FORMA QUE TODAS LAS CADENAS TIPO <tr>/<tr> QUEDAN CONCATENADAS EN UNA UNICA CADENA POR CLIENTE
	--ESTO AGRUPA TODOS LOS ITEMS DE UN CLIENTE EN UNA UNICA CADENA LISTA PARA SER INCORPORADA A UNA TABLA HTML
	DECLARE @GRILLA_HTML TABLE (
		GRIL_CLIENTE INT
		,GRIL_HTML NVARCHAR(MAX)
	)
	INSERT INTO @GRILLA_HTML (
		GRIL_CLIENTE
		,GRIL_HTML
	)
	SELECT
		FILA_CLIENTE,
		STUFF(
			(SELECT DISTINCT
				'' + FILA_HTML
			FROM @FILAS_HTML AS B
			WHERE B.FILA_CLIENTE = A.FILA_CLIENTE
			FOR XML PATH(''), TYPE
			).value('(./text())[1]','NVARCHAR(MAX)')
		,1,0,'')
	FROM @FILAS_HTML AS A
	GROUP BY FILA_CLIENTE

	--GENERO UN UNICO MENSAJE PARA CADA DESTINATARIO INCORPORANDO LA GRILLA
	--UTILIZANDO TEMPLATE_MAIN Y LAS FILAS CONCATENADAS EN EL PASO ANTERIOR,
	--INCORPORA LA CADENA DE LAS FILAS DE FACTURACION COMO DETALLE DE LA TABLA HTML DEFINIDA EN TEMPLATE_MAIN
	--DE ESTA FORMA SE GENERA UN UNICO MENSAJE PARA CADA CLIENTE
	UPDATE dmTPES_MAIL
		SET MAIL_CUERPO = CAST( REPLACE( @TEMPLATE_MAIN, '{template::rows-1}', GRIL_HTML)	AS NVARCHAR(MAX))
	FROM dmTPES_MAIL MAIL
	INNER JOIN @GRILLA_HTML
		ON GRIL_CLIENTE = MAIL_CLIENTE
	WHERE MAIL_CODIGO_TPRG = @TAREA_PROGRAMADA

	--TAMBIEN INCORPORO EL ENCABEZADO Y PIE DE PAGINA DISPONIBLES
	UPDATE dmTPES_MAIL
		SET MAIL_CUERPO = CAST(
			REPLACE(
			REPLACE( MAIL_CUERPO
				,'{template::head}', @TEMPLATE_HEAD)
				,'{template::foot}', @TEMPLATE_FOOT)
		AS NVARCHAR(MAX))
	FROM dmTPES_MAIL MAIL
	WHERE MAIL_CODIGO_TPRG = @TAREA_PROGRAMADA

	EXEC dbo.dmTPES_spAplicarParametrosDeMensaje @TAREA_PROGRAMADA

	--CARGO LOS MENSAJES EN LA BANDEJA DEL SISTEMA
	--Testing:
	--		comentar para no aplicar el envío de mails
--	EXEC dbo.dmTPES_spCargarMensajesEnBandejaDeSalida @TAREA_PROGRAMADA

--END
--GO
